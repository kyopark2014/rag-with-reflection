@startuml Self RAG

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

skinparam wrapWidth 200
skinparam maxMessageSize 200

!$BLACK = "#black"
!$COLOR_A_6 = "#d4de5e"
!$COLOR_A_5 = "#7f3b08"
!$COLOR_A_4 = "#b35806"
!$COLOR_A_3 = "#e08214"
!$COLOR_A_2 = "#fdb863"
!$COLOR_A_1 = "#fee0b6"
!$COLOR_NEUTRAL = "#f7f7f7"
!$COLOR_B_1 = "#d8daeb"
!$COLOR_B_2 = "#b2abd2"
!$COLOR_B_3 = "#8073ac"
!$COLOR_B_4 = "#542788"
!$COLOR_B_5 = "#2d004b"
!$COLOR_REL_LINE = "#8073ac"
!$COLOR_REL_TEXT = "#8073ac"

UpdateElementStyle("container", $bgColor=$COLOR_A_6, $fontColor=$BLACK, $borderColor=$COLOR_A_1, $shadowing="false", $legendText="Internal user")
UpdateElementStyle("system", $bgColor=$COLOR_B_4, $fontColor=$COLOR_NEUTRAL, $borderColor=$COLOR_B_2, $legendText="External system")
UpdateRelStyle($lineColor=$COLOR_REL_LINE, $textColor=$COLOR_REL_TEXT)

LAYOUT_WITH_LEGEND()

'System(start, "Start")
'System(END, "END")


Boundary(c1, "Transformation") {
    Container(rewrite_node, "rewrite_node")  
    Container(decompose_node, "decompose_node")        
}

Boundary(c2, "") {
    Container(retrieve_node1, "retrieve_node")
    Container(retrieve_node2, "retrieve_node")
    Container(retrieve_node3, "retrieve_node")
    

    SystemQueue_Ext(duplication_checker, "duplication_checker")

    
    Container(grade_node1, "grade_node")
    Container(grade_node2, "grade_node")
    Container(grade_node3, "grade_node")  
    Container(grade_node4, "grade_node")  
    
     
}

Container(generate_node, "generate_node")    

Rel(Start, rewrite_node, "query")

Rel(rewrite_node, decompose_node, "revised query")

Rel(decompose_node, retrieve_node1, "sub-query1")
Rel(decompose_node, retrieve_node2, "sub-query2")
Rel(decompose_node, retrieve_node3, "sub-query3")

Rel(retrieve_node1, grade_node1, "relevant\ndocs1")
Rel(retrieve_node2, grade_node2, "relevant\ndocs2")
Rel(retrieve_node3, grade_node3, "relevant\ndocs3")

Rel(grade_node1, generate_node, "filtered\ndocs1")
Rel(grade_node2, generate_node, "filtered\ndocs2")
Rel(grade_node3, generate_node, "filtered\ndocs3")

Rel(generate_node, END, "result")

@enduml